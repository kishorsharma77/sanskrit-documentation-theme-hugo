function getSidebarItemHtml(sidebarItem, parentListIdIn) {
    var parentListId = parentListIdIn || "sb";
    var item_url_stripped = sidebarItem.url || "#";
    item_url_stripped = item_url_stripped.replace("index.html", "").replace("index.md", "").replace(".md", "/");
    if (item_url_stripped.startsWith("/")) {
      item_url_stripped = item_url_stripped.toLowerCase();
    }

    var urlTarget = "";
    if (item_url_stripped.startsWith("http://") || item_url_stripped.startsWith("https://") || item_url_stripped.startsWith("ftp://")) {
        urlTarget = "_newTab";
    }
    // console.debug(item_url_stripped);
    let anchorClasses = "";
    let ulClass = "list pl2";
    var liClass = "inactive";  // list-group-item-* is a bootstrap class.
    if (document.location.toString().replace("#[^/]*$", "") == item_url_stripped) {
        liClass = "active";
    }
    // console.debug(sidebarItem);
    if(sidebarItem.hasOwnProperty("contents")) {
        var contentHtml = "";
        var title = sidebarItem.title || pageUrlToTitle[item_url_stripped];
        var listId = `${parentListId}_${title.replace(" ", "_")}`;
        for(let subitem of sidebarItem.contents) {
            contentHtml = `${contentHtml}\n ${getSidebarItemHtml(subitem, listId)}`;
        }
        var itemHtml =
        `<li class="${liClass}"><span class="d-flex justify-content-between">` +
        `<a href="${item_url_stripped}" class="${anchorClasses}"> ${title}</a> ` +
        `<a  data-toggle="collapse" href="#${listId}" role="button" aria-expanded="false" aria-controls="${listId}"> <i class="fas fa-caret-down"></i></a></span>\n` +
        `<ul id='${listId}' class='${ulClass} collapse'>${contentHtml}\n</ul>\n` +
        `</li>\n`;
    } else if (sidebarItem.url.startsWith("dir://")) {
        var dirUrl = sidebarItem.url.replace("dir://", "/").toLowerCase();
        if (dirUrl.endsWith("/")) {
            dirUrl = dirUrl.slice(0,-1);
        }
        if (dirUrl in pageDirectoryToUrl) {
            var itemHtml = "";
            // console.debug(dirUrl);
            // Note that only pages parsed and generated by jekyll are processed below - not ready files like pdf-s and htmls.
            for (let contentUrl of pageDirectoryToUrl[dirUrl]) {
                var subitem = {"url": contentUrl};
                itemHtml = `${itemHtml}\n ${getSidebarItemHtml(subitem)}`;
            }
        } else {
            console.error(`No such directory ${dirUrl}`)
        }
    }
    else {
        var title = sidebarItem.title || pageUrlToTitle[item_url_stripped];
        var itemHtml = `<li class="${liClass}"><a href="${baseURL + item_url_stripped }"  class="${anchorClasses}" target="">${title}</a></li>`;
    }
    return itemHtml;
}

function insertSidebarItems() {
    var sidebar = sidebarsData[sidebarId];
    // $("#sidebarTitle a").html(sidebar.title);
    // console.debug(sidebar);
    for (let sidebarItem of sidebar.contents) {
        $("#displayed_sidebar").append(getSidebarItemHtml(sidebarItem));
    }
    // this highlights the active parent class in the navgoco sidebar. this is critical so that the parent expands when you're viewing a page.
    $("li.active").parents('li').addClass("active");
    $("li.active").parents('li').removeClass("inactive");
}

function insertTopnavDropdownItems() {
    var topnavDropdown = sidebarsData[topnavId];
    // console.debug(topnavDropdown);
    for (let item of topnavDropdown.contents) {
        $("#topnav_dropdown").append(getSidebarItemHtml(item));
    }
    // this highlights the active parent class in the navgoco sidebar. this is critical so that the parent expands when you're viewing a page.
    $("li.active").parents('li').addClass("active");
    $("li.active").parents('li').removeClass("inactive");
}

$(document).ready(function() {
    insertSidebarItems();
    // insertTopnavDropdownItems();
    // Initialize navgoco sidebar with default options
    // $("#displayed_sidebar").navgoco({
    //     caretHtml: '',
    //     accordion: true,
    //     openClass: 'active', // open
    //     save: true,
    //     cookie: {
    //         name: 'navgoco_sidebar',
    //         expires: false,
    //         path: '/'
    //     },
    //     slide: {
    //         duration: 400,
    //         easing: 'swing'
    //     }
    // });
});
